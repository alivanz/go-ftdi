package ftdi

// #include "ftd2xx.h"
// #define STATUS_NAME(status) case status: return #status;
// const char *status_string(FT_STATUS status) {
// 	switch (status) {
// 		STATUS_NAME(FT_OK)
// 		STATUS_NAME(FT_INVALID_HANDLE)
// 		STATUS_NAME(FT_DEVICE_NOT_FOUND)
// 		STATUS_NAME(FT_DEVICE_NOT_OPENED)
// 		STATUS_NAME(FT_IO_ERROR)
// 		STATUS_NAME(FT_INSUFFICIENT_RESOURCES)
// 		STATUS_NAME(FT_INVALID_PARAMETER)
// 		STATUS_NAME(FT_INVALID_BAUD_RATE)
// 		STATUS_NAME(FT_DEVICE_NOT_OPENED_FOR_ERASE)
// 		STATUS_NAME(FT_DEVICE_NOT_OPENED_FOR_WRITE)
// 		STATUS_NAME(FT_FAILED_TO_WRITE_DEVICE)
// 		STATUS_NAME(FT_EEPROM_READ_FAILED)
// 		STATUS_NAME(FT_EEPROM_WRITE_FAILED)
// 		STATUS_NAME(FT_EEPROM_ERASE_FAILED)
// 		STATUS_NAME(FT_EEPROM_NOT_PRESENT)
// 		STATUS_NAME(FT_EEPROM_NOT_PROGRAMMED)
// 		STATUS_NAME(FT_INVALID_ARGS)
// 		STATUS_NAME(FT_NOT_SUPPORTED)
// 		STATUS_NAME(FT_OTHER_ERROR)
// 		STATUS_NAME(FT_DEVICE_LIST_NOT_READY)
// 	}
// 	return "???";
// }
import "C"

// Status FT_STATUS
type Status C.FT_STATUS

const (
	FT_OK                          = Status(C.FT_OK)
	FT_INVALID_HANDLE              = Status(C.FT_INVALID_HANDLE)
	FT_DEVICE_NOT_FOUND            = Status(C.FT_DEVICE_NOT_FOUND)
	FT_DEVICE_NOT_OPENED           = Status(C.FT_DEVICE_NOT_OPENED)
	FT_IO_ERROR                    = Status(C.FT_IO_ERROR)
	FT_INSUFFICIENT_RESOURCES      = Status(C.FT_INSUFFICIENT_RESOURCES)
	FT_INVALID_PARAMETER           = Status(C.FT_INVALID_PARAMETER)
	FT_INVALID_BAUD_RATE           = Status(C.FT_INVALID_BAUD_RATE)
	FT_DEVICE_NOT_OPENED_FOR_ERASE = Status(C.FT_DEVICE_NOT_OPENED_FOR_ERASE)
	FT_DEVICE_NOT_OPENED_FOR_WRITE = Status(C.FT_DEVICE_NOT_OPENED_FOR_WRITE)
	FT_FAILED_TO_WRITE_DEVICE      = Status(C.FT_FAILED_TO_WRITE_DEVICE)
	FT_EEPROM_READ_FAILED          = Status(C.FT_EEPROM_READ_FAILED)
	FT_EEPROM_WRITE_FAILED         = Status(C.FT_EEPROM_WRITE_FAILED)
	FT_EEPROM_ERASE_FAILED         = Status(C.FT_EEPROM_ERASE_FAILED)
	FT_EEPROM_NOT_PRESENT          = Status(C.FT_EEPROM_NOT_PRESENT)
	FT_EEPROM_NOT_PROGRAMMED       = Status(C.FT_EEPROM_NOT_PROGRAMMED)
	FT_INVALID_ARGS                = Status(C.FT_INVALID_ARGS)
	FT_NOT_SUPPORTED               = Status(C.FT_NOT_SUPPORTED)
	FT_OTHER_ERROR                 = Status(C.FT_OTHER_ERROR)
	FT_DEVICE_LIST_NOT_READY       = Status(C.FT_DEVICE_LIST_NOT_READY)
)

func errorStatus(status C.uint) error {
	if status == C.FT_OK {
		return nil
	}
	return Status(status)
}

func (s Status) Error() string {
	return C.GoString(C.status_string(C.FT_STATUS(s)))
}
